Service Name,Service Type,Port,Endpoint Path,HTTP Method,Full URL (via Proxy),Authentication Required,Purpose/Description,Request Body/Parameters,Response Type,Consumed By Service,Provides Data To,Internal Service URL,Technology Stack
api-php,Backend Microservice,8000,/api/login,POST,http://localhost/php/api/login,No,User authentication - Login,"{""email"": ""string"", ""password"": ""string""}",JWT Token,Frontend (index.js),Frontend,http://api-php:8000/api/login,PHP/Lumen
api-php,Backend Microservice,8000,/api/signup,POST,http://localhost/php/api/signup,No,User registration,"{""name"": ""string"", ""email"": ""string"", ""password"": ""string"", ""confirmed_password"": ""string"", ""usertype"": ""seller|buyer""}",Success/Error message,Frontend (register.js),Frontend,http://api-php:8000/api/signup,PHP/Lumen
api-php,Backend Microservice,8000,/api/validate,GET,http://localhost/php/api/validate,Yes (Bearer Token),Validate JWT token and return user info,Authorization header with Bearer token,User data object,Frontend (index.js) & api-python (routes.py),Frontend & api-python,http://api-php:8000/api/validate,PHP/Lumen
api-node,Backend Microservice,8001,/api,GET,http://localhost/node/api,No,Health check endpoint,None,"{""message"": ""Hello world""}",Frontend,N/A,http://api-node:8001/api,Node.js/Express
api-node,Backend Microservice,8001,/api/auth/signin,POST,http://localhost/node/api/auth/signin,No,Alternative signin endpoint,User credentials,Authentication response,N/A (not currently used),N/A,http://api-node:8001/api/auth/signin,Node.js/Express
api-node,Backend Microservice,8001,/api/auth/signup,POST,http://localhost/node/api/auth/signup,No,Alternative signup endpoint,User registration data,Registration response,N/A (not currently used),N/A,http://api-node:8001/api/auth/signup,Node.js/Express
api-node,Backend Microservice,8001,/api/users,GET,http://localhost/node/api/users,No,List all users,None,Array of user objects,N/A (not currently used),N/A,http://api-node:8001/api/users,Node.js/Express
api-node,Backend Microservice,8001,/api/products,GET,http://localhost/node/api/products,Yes (Bearer Token),List products with pagination and filters,"Query params: page, pageSize, category, name, user (seller)","{""data"": [...], ""metadata"": {""page"", ""pageSize"", ""count""}}",Frontend (market.js & stock/index.js),Frontend,http://api-node:8001/api/products,Node.js/Express
api-node,Backend Microservice,8001,/api/products,POST,http://localhost/node/api/products,Yes (Bearer Token),Create new product,"{""name"": ""string"", ""description"": ""string"", ""categoryId"": number, ""amount"": number, ""price"": number}",Success/Error message,Frontend (stock/add.js),Frontend,http://api-node:8001/api/products,Node.js/Express
api-node,Backend Microservice,8001,/api/products/:id,POST,http://localhost/node/api/products/:id,Yes (Bearer Token),Update existing product,Product update data,Success/Error message,N/A (not currently used),N/A,http://api-node:8001/api/products/:id,Node.js/Express
api-node,Backend Microservice,8001,/api/products/:id/delete,GET,http://localhost/node/api/products/:id/delete,Yes (Bearer Token),Delete a product,Product ID in URL,Success/Error message,N/A (not currently used),N/A,http://api-node:8001/api/products/:id/delete,Node.js/Express
api-node,Backend Microservice,8001,/api/categories,GET,http://localhost/node/api/categories,Yes (Bearer Token),List all product categories,None,"{""data"": [{""id"", ""name"", ""description""}]}",Frontend (market.js & stock/index.js & stock/add.js & categories.js),Frontend,http://api-node:8001/api/categories,Node.js/Express
api-python,Backend Microservice,8002,/api/orders,GET,http://localhost/python/api/orders,Yes (Bearer Token),List all orders for buyer,Authorization header with Bearer token,"{""data"": [{order objects with details}]}",Frontend (orders.js),Frontend,http://api-python:8002/api/orders,Python/Flask
api-python,Backend Microservice,8002,/api/orders,POST,http://localhost/python/api/orders,Yes (Bearer Token),Create new order,"{""seller"": ""string"", ""items"": [{""id"", ""quantity"", ""price""}]}","{""status"": ""success|fail"", ""message"": ""string""}",Frontend (cart.js),Frontend,http://api-python:8002/api/orders,Python/Flask
frontend,Frontend Application,3000,/,GET,http://localhost/,No,Login page,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/,Next.js/React
frontend,Frontend Application,3000,/register,GET,http://localhost/register,No,Registration page,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/register,Next.js/React
frontend,Frontend Application,3000,/market,GET,http://localhost/market,Yes (Cookie),Buyer marketplace - browse products,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/market,Next.js/React
frontend,Frontend Application,3000,/cart,GET,http://localhost/cart,Yes (Cookie),Shopping cart page,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/cart,Next.js/React
frontend,Frontend Application,3000,/orders,GET,http://localhost/orders,Yes (Cookie),View buyer orders,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/orders,Next.js/React
frontend,Frontend Application,3000,/stock,GET,http://localhost/stock,Yes (Cookie),Seller stock management,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/stock,Next.js/React
frontend,Frontend Application,3000,/stock/add,GET,http://localhost/stock/add,Yes (Cookie),Add new product page,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/stock/add,Next.js/React
frontend,Frontend Application,3000,/categories,GET,http://localhost/categories,Yes (Cookie),View product categories,N/A,HTML page,N/A,Users (Browser),http://nextjs:3000/categories,Next.js/React
proxy,Reverse Proxy,80,/,ALL,http://localhost/,No,Routes all traffic to appropriate microservices,N/A,N/A,N/A,All Services,http://proxy:80/,Nginx
postgres,Database,5432,N/A,N/A,localhost:5432,Yes (Username/Password),PostgreSQL database for api-node,N/A,N/A,api-node,api-node,postgres:5432,PostgreSQL 11